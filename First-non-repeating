Given a string s consisting of small English letters, find and return the first instance of a non-repeating character in it. If there is no such character, return '_'.

Example

    For s = "abacabad", the output should be
    firstNotRepeatingCharacter(s) = 'c'.

    There are 2 non-repeating characters in the string: 'c' and 'd'. Return c since it appears in the string first.

    For s = "abacabaabacaba", the output should be
    firstNotRepeatingCharacter(s) = '_'.

    There are no characters in this string that do not repeat.

Input/Output

    [execution time limit] 3 seconds (java)

    [input] string s

    A string that contains only lowercase English letters.

    Guaranteed constraints:
    1 ≤ s.length ≤ 105.

    [output] char
        The first non-repeating character in s, or '_' if there are no characters that do not repeat.
code:-
char firstNotRepeatingCharacter(String s) {
   /* int result=0;
    int count=0;
for(int i=0;i<s.length();i++){
    for(int j=i+1;j<s.length();j++){
        if(s.charAt(i)==s.charAt(j)){
            count+=1;
            
        }

    }
    if(count==0){
        return s.charAt(i);
    }
    else{
        count=0;
    }  
 }
 return '-';   */

for(int i=0;i<s.length();i++){
    if(s.indexOf(s.charAt(i))==s.lastIndexOf(s.charAt(i))){
        return s.charAt(i);
    }
}
return '_';
 }
